    plugins {
        id 'java'
        id 'org.springframework.boot' version '3.4.3'
        id 'io.spring.dependency-management' version '1.1.7'
        id 'org.asciidoctor.jvm.convert' version '3.3.2'
    }

    group = 'org.ssafy'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    test {
        testLogging {
            events "passed", "skipped", "failed"
            showStandardStreams = true
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('snippetsDir', file("build/generated-snippets"))
    }

    dependencies {
        // jdbc
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'

        //QueryDsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        // JPA
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'mysql:mysql-connector-java:8.0.33'

        // amqp
        implementation 'org.springframework.boot:spring-boot-starter-amqp'

        // mongodb
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

        // redis
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // security
        implementation 'org.springframework.boot:spring-boot-starter-security'

        // web
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // websocket
        implementation 'org.springframework.boot:spring-boot-starter-websocket'

        // mybatis
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

        // dotenv
        implementation 'io.github.cdimascio:dotenv-java:3.2.0'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // mysql
        runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'

        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // email
        implementation 'org.springframework.boot:spring-boot-starter-mail'

        // sms
        implementation 'net.nurigo:sdk:4.3.0'


        // Elastic Search
        implementation 'org.springframework.data:spring-data-elasticsearch'
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'co.elastic.clients:elasticsearch-java'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
        testImplementation 'org.springframework.amqp:spring-rabbit-test'
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        testImplementation "org.mockito:mockito-core:3.12.4"

        // actuator
        implementation 'org.springframework.boot:spring-boot-starter-actuator'


        // WebSocket
        implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.2'

        // auto compile
        // implementation 'org.springframework.boot :spring-boot-devtools'

        // hibernate
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6:2.18.2'

        // fcm
        implementation 'com.google.firebase:firebase-admin:9.4.3'

    }

    tasks.named('test') {
        outputs.dir snippetsDir
        useJUnitPlatform()
    }

    tasks.named('asciidoctor') {
        inputs.dir snippetsDir
        dependsOn test
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }